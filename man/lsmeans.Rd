% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsmeans.R
\name{lsmeans}
\alias{lsmeans}
\title{lsmeans function}
\usage{
lsmeans(
  lmfit,
  effect,
  meanType = "intercept",
  alpha = 0.05,
  sortHiLo = FALSE,
  sortLoHi = FALSE
)
}
\arguments{
\item{lmfit}{object of class lm.}

\item{effect}{character. Name of effect for which lsmeans should be calculated}

\item{meanType}{mean to use for calculating CV. Options include 'raw' = mean of y, 'effect' = mean of estimated effects, and 'intercept', the estimated intercept of th emodel fit. Default is "intercept". To reproduce CVs calculated by proc glm in SAS, use "intercept", or set contrasts to use sum contrsaints with 'options(contrasts = c("contr.sum", "contr.sum")'}

\item{alpha}{numeric. Significance threshold. Default is 0.05}
}
\value{
list. Returns a list of BLUEs, mean used for CV, CV, and LSD.
}
\description{
function to calculate lsmeans, CV and LSD from a linear model fit.
}
\details{
This function was made to calculate effects, CV and LSD as proc glm in SAS does. CVs are not reliable statistics for determining field trial quality.
}
\examples{
# contrasts need to be set to sum contraints to obtain same stats produced by proc glm in SAS 
usrContr <- options("contrasts") # save user contrast options
options(contrasts = c('contr.sum', 'contr.sum'))
fit <- lm(mpg ~ factor(cyl), data = mtcars)
lsmeans(fit, effect = "factor(cyl)")
options(contrasts = usrContr)
}
